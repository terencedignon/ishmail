c
parent_email_id
c
s
c
Email.where(subject: "what up", user_id: user.id).order(created_at: :desc).firstc
Email.where(subject: "what up", user_id: user.id).order(created_at: :desc).first
Email.where(subject: "what up", user_id: user.id).order(created_at: :desc)
Email.where(subject: "what up", user_id: user.id).order_by(created_at: :desc)
Email.where(subject: "what up", user_id: user.id)
Email.where(subject: "what up")
Email.where(subject: "hi")
Email.find_by_user_id(user.id).where(subject: "hi")
Email.find_by_user_id(user.id)
Email.find_by_user(user.id)
Email.find_by_user(user)
user
Email.find_by_from_email(recipient[:email])
Email.find_by_from_email(recipient[:email]).where(subject: "what up")
Email.find_by_from_email(recipient[:email])
Email.find_by_from_email(recipient[:token])
Email.find_by_username(recipient[:token])
Email.find_by_username(recipient.token)
recipient
recip
@email.to
current_user
subject
c
mail.to
res
c
email_params
params["email"]
params
SendGrid::Mail.new(to: "terry.p.dignon@gmail.com", from: "ishmael@ishmail.co", subject: "howdy dowdy", body: "who likes to party")
SendGrid::Email
SendGrid::Create
SendGrid
recip_array
c
raw_html
raw_html.gsub!("//", "")
raw_html
raw_text
raw_html
c
raw_header
raw_text
c
raw_header
c
cc
c
@email.to.map{|user| user[:full]}.join(",")
@email.map{|user| user[:full]}.join(",")
c
@email.to
@email
c
@email
@email.to
@email.from
@email.to[1]
@email.to.length
 @email.to.map{|user| user[:full]}
 @email.to.map{|user| user[:full]}.join(", ")
 @email.map{|user| user[:full]}.join(", ")
 @email.map{|user| user[:full]}.join(", ")}
 @email.map{|user| user[:full]}.join(", ")
recipient[:token]
recipient
c
@email.to.map{|user| user[:full]}
@email.to
@email.to}
@email.to.each {|user| p user[:full]}
@email.to.each do |user|
@email.to
@user.to
c
@email.from[:name]
@email.from
@email
c
@email::Email
@email.raw_headers
"<CAE8zVUC03HyjKSWnnjjUVhjBcAi9qBfE_O6mYT5P8tRgt=1xKA@mail.gmail
@email.headers["Message-ID"]
@email["Message-ID"]
c
@email.headers["Message-ID"]
@email.headers["Message-id"]
@email.headers["X-Received"]
@email.headers.received
@email.headers
@email.to
@email.cc
c
@email.cc
@email.raw_headers
@email.instance_variables
@email
@email.to
@email.from
@email
c
@email.from
c
@email.attachments
@email.attachment
@email.body
@email.subject
@email
@email.to
@to
@email.from
c
@email.headers["Received"]
@email.headers.Received
@email.headers.received
@email.headers
@email.raw_html
@email.cc
@email.from
@email.to
@email.params
@email
@email[0]
@email["params"]
@email.params
@email
@email.instance_variables.to
@email.instance_variables[:@to]
@email.instance_variables[@to]
@email.instance_variables
@email
@user
params
c
Email.where(user_id: current_user.id).includes(:recipients, :emails).where(parent_email_id: nil).order(email_updated_at: :desc).first(10).last
c
Email.where(user_id: current_user.id).includes(:recipients, :emails).where(parent_email_id: nil).order(email_updated_at: :desc).first(10)
Email.where(user_id: current_user.id).includes(:recipients, :emails).where(parent_email_id: nil).order(email_updated_at: :desc).first(10).last
Email.where(user_id: current_user.id).includes(:recipients, :emails).where(parent_email_id: nil).order(email_updated_at: :desc).first(10)
Email.where(user_id: current_user.id).includes(:recipients, :emails).where(parent_email_id: nil).(email_updated_at: :desc).first(10)
Email.where(user_id: current_user.id).includes(:recipients, :emails).where(parent_email_id: nil)
Email.where(user_id: current_user.id).includes(:recipients, :emails)
Email.where(user_id: current_user.id)
@emails.map(&:id)
c
@emails.map(&:id)
c
@emails.map(&:id)
c
@emails.map(&:id)
c
@emails.map(&:id)
c
@emails.map(&:id)
c
@emails.map(&:id)
c
@emails.map(&:id)
c
@emails.map(&:id)
c
@emails.map(&:id)
@emails
c
User.find_by_username(@email.to[0][:token])
c
@email.to[0][:token]
@email.to
@email.from[:token]
@email.from
@email.from[0][:token]
c
@email.body
@email.subject
@email.to[0][:token]
@email.to[0].token
@email.to[0]
@email.to
@email.to.full
@email.to
@email.from
@email.to
@email
@email["params"]
@email.params
@email
params
c
params
c
params
c
params
c
s
recip
c
Email.get_by_current_user(current_user.id).includes(:emails).where(parent_email_id: nil).order(created_at: :desc).first(50).length
Email.get_by_current_user(current_user.id).includes(:emails).where(parent_email_id: nil).order(created_at: :desc).first(50)
Email.find_by_user_id(8)
Email.find_by_user_id(8
Email.find_by_user_id(8).
Email.find_by_user_id(8).to_a
Email.find_by_user_id(8).to
Email.find_by_user_id(8).to-a
Email.find_by_user_id(8).length
Email.find_by_user_id(8)
current_user
c
recip.is_a? User
recip.class == "User"
recip.class
c
s
recip
c
sc
s
c
User.where(fname: fname, lname: lname).lengt
User.where(fname: fname, lname: lname).length
User.where(fname: fname, lname: lname)
Email.find_by_fname(fname)
Email.where(fname: fname).to_a
Email.where(fname: fname)
Email.where(fname: fname, lname: lname).to_a
Email.where(fname: fname, lname: lname)
EMail.where(fname: fname, lname: lanme)
lname
fname
s
recip
c
@emails.to_a
@emails
c
@emails.to_a
@emails
c
params["email"]
c
params["email"]
params["email"].length
Email.where(id: params["email"]).length
Email.where(id: params["email"])
Email.where(id: params["email"]))
Email.where(id: emails)
params["email"]
c
params["email"]
